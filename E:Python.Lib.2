#  1. Create a pyenv or virtualenv ~/ENV
   2. Modify your ~/.bashrc shell file to activate your environment
      upon login.
   3. Install the docopt python package using pip
   4. Write a program that uses docopt to define a commandline
      program. Hint: modify the iterate program.
   5. Demonstrate the program works.
   
   Example Code:
   *Question 1:
    #To install pyenvy on the OS system, usw this command in your terminal:
    curl https://pyenv.run | bash
    
    #Install different version of pyenv in the terminal:
    pyenv install 3.8.1
    pyenv install 2.7.16
    pyenv virtualenv 3.8.1 ENV3
    pyenv virtualenv 2.7.16 ENV2
    
    #Integrate bash 
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    export PYENV_VIRTUALENV_DISABLE_PROMPT=1
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
    __pyenv_version_ps1() {
      local ret=$?;
      output=$(pyenv version-name)
      if [[ ! -z $output ]]; then
       echo -n "($output)"
      fi
      return $ret;
    }
    PS1="\$(__pyenv_version_ps1) ${PS1}"
    alias ENV2="pyenv activate ENV2"
    alias ENV3="pyenv activate ENV3"
    ENV3
    
    #Update pip
    ENV2
    pip install pip -U
    ENV3
    pip install pip -U
    
    
    
    
    #Installing Pyenv usinf Homebrew
    #Install x-code
    xcode-select --install
    
    #Properly Install header files
    sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -tar
    
    #Install homebrew, pyenv-virtualwrapper, pyenv-virtualenv, and pyenv
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    brew update
    brew install readline xz
    brew install pyenv pyenv-virtualenv pyenv-virtualenvwrapper
    
    
    
    #Install pyenv using Ubuntu 18.04
    sudo apt-get update
    sudo apt-get install git python-pip make build-essential libssl-dev
    sudo apt-get install zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev
    sudo pip install virtualenvwrapper
    git clone https://github.com/yyuu/pyenv.git ~/.pyenv
    git clone https://github.com/pyenv/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv
    git clone https://github.com/yyuu/pyenv-virtualenvwrapper.git ~/.pyenv/plugins/pyenv-virtualenvwrapper
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
    echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
    
    #Use curl command to install pyenv
     curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
     
     #Install curl dependencies
     sudo apt-get update && sudo apt-get upgrade
     sudo apt-get install -y make build-essential libssl-dev
     sudo apt-get install -y zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev
     sudo apt-get install -y wget curl llvm libncurses5-dev git
    
     #Activate pyenv in the terminal
     which pyenv
     
     #View list of python versions provided by pyenv
     pyenv install -l
     pyenv update
     pyenv install 2.7.16
     pyenv install 3.8.1
     
     #python global default
     pyenv global 3.8.1
     
     #View which version of pyenv is installed on the OS
     pyenv version
     
     #View which pyenv versions are available
     pyenv versions
     
     #Use specific pyenv environments
     pyenv virtualenv 2.7.16 ENV2
     pyenv virtualenv 3.8.1 ENV3
     
     
     
     
     
     #Question 2:
     #Switch pyenv environments, from pyenv 2 to pyenv 3 
     pyenv activate ENV2
     pyenv activate ENV3
     pyenv activate ENV2
     pyenv deactivate ENV2
     alias ENV2="pyenv activate ENV2"
     alias ENV3="pyenv activate ENV3"
     ENV2
     ENV3
     
     
     
     
     #Queston 3:
     #install docopt
     from docopt import docopt
     pip install docopt
     
     
     
     
     #Question 4
     
    
     
    
    
